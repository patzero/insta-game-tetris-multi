apply plugin: 'com.android.application'

android {
    buildToolsVersion "23.0.2"
    compileSdkVersion 23

    defaultConfig {
        applicationId "com.github.badoualy.badoualyve"
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 1
        versionName '0.0.1-beta'
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            jniLibs.srcDirs = ['libs']
        }
    }

    signingConfigs {
        release {
            // Insert your configuration here
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            proguardFile 'proguard.config'
            signingConfig signingConfigs.release
        }

        debug {
            debuggable true
            minifyEnabled false
        }
    }
}

// called every time gradle gets executed, takes the native dependencies of
// the natives configuration, and extracts them to the proper libs/ folders
// so they get packed with the APK.
task copyAndroidNatives() {
    file("libs/armeabi/").mkdirs();
    file("libs/armeabi-v7a/").mkdirs();
    file("libs/x86/").mkdirs();

    configurations.natives.files.each { jar ->
        def outputDir = null
        if (jar.name.endsWith("natives-armeabi-v7a.jar")) outputDir = file("libs/armeabi-v7a")
        if (jar.name.endsWith("natives-armeabi.jar")) outputDir = file("libs/armeabi")
        if (jar.name.endsWith("natives-x86.jar")) outputDir = file("libs/x86")
        if (outputDir != null) {
            copy {
                from zipTree(jar)
                into outputDir
                include "*.so"
            }
        }
    }
}

task run(type: Exec) {
    def path
    def localProperties = project.file("../local.properties")
    if (localProperties.exists()) {
        Properties properties = new Properties()
        localProperties.withInputStream { instr ->
            properties.load(instr)
        }
        def sdkDir = properties.getProperty('sdk.dir')
        if (sdkDir) {
            path = sdkDir
        } else {
            path = "$System.env.ANDROID_HOME"
        }
    } else {
        path = "$System.env.ANDROID_HOME"
    }

    def adb = path + "/platform-tools/adb"
    commandLine "$adb", 'shell', 'am', 'start', '-n', 'com.github.badoualy.badoualyve.android/AndroidLauncher'
}

// sets up the Android Idea project, using the old Ant based build.
idea {
    module {
        sourceDirs += file('src/main/java')
        scopes = [COMPILE: [plus: [project.configurations.compile]]]

        iml {
            withXml {
                def node = it.asNode()
                def builder = NodeBuilder.newInstance();
                builder.current = node;
                builder.component(name: "FacetManager") {
                    facet(type: "android", name: "Android") {
                        configuration {
                            option(name: "UPDATE_PROPERTY_FILES", value: "true")
                        }
                    }
                }
            }
        }
    }
}
